{"version":3,"sources":["harvard-galery/images/1097.jpg","harvard-galery/images/404.jpg","serviceWorker.js","harvard-galery/componentes/Picture.js","harvard-galery/componentes/PicturesList.js","harvard-galery/componentes/Gallery.js","harvard-galery/componentes/PicturePage.js","harvard-galery/componentes/NoFound.js","harvard-galery/componentes/Routers.js","harvard-galery/componentes/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Picture","props","componentDidMount","_existComponent","componentWillUnmount","getImage","a","fetch","xhr","blob","file","url","URL","createObjectURL","setState","images","state","renderCards","length","className","src","alt","name","style","fontWeight","id","to","lastupdate","theme","this","Component","PicturesList","pictures","map","picure","gallerynumber","key","Gallery","search","results","error","handleCaptureSearch","event","target","value","console","log","handleResults","json","records","showPictures","type","onChange","defaultValue","placeholder","PicturePage","imgMantenimiento","NotFound","notFound","Routers","exact","path","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,qICYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+FCoFSC,E,YAlGX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAWVC,kBAAoB,WAEhB,EAAKC,iBAAkB,GAdT,EAiBlBC,qBAAuB,WAEnB,EAAKD,iBAAkB,GAnBT,EAsBlBE,SAtBkB,sBAsBP,gCAAAC,EAAA,sEACWC,MAAM,iCADjB,cACDC,EADC,gBAEYA,EAAIC,OAFhB,OAEDC,EAFC,OAGDC,EAAMC,IAAIC,gBAAgBH,GAE7B,EAAKP,iBACJ,EAAKW,SAAS,CACVC,OAAM,sBAAO,EAAKC,MAAMD,QAAlB,CAA0BJ,MAPjC,2CAtBO,EAkClBM,YAAc,WACV,OAAG,EAAKD,MAAMD,OAAOG,OAAS,EAEtB,yBAAKC,UAAU,oCACX,yBAAKA,UAAU,+BAA+BC,IAAK,EAAKJ,MAAMD,OAAO,GAAIM,IAAK,EAAKC,OACnF,yBAAKH,UAAU,aACX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAc,EAAKG,MACjC,wBAAIC,MAAO,CACPC,WAAa,YADjB,OAEQ,EAAKC,KAGjB,yBAAKN,UAAU,uBACX,kBAAC,IAAD,CAAMO,GAAE,wBAAmB,GAAKP,UAAU,aACtC,yCAAc,uBAAGA,UAAU,kBAMvC,2BAAOA,UAAU,iCACZ,EAAKQ,YAGV,uBAAGR,UAAU,aACR,EAAKS,SAOlB,yBAAKT,UAAU,oBACX,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,4BA/E3B,EAAKG,KAAOrB,EAAMqB,KAClB,EAAKK,WAAa1B,EAAM0B,WACxB,EAAKC,MAAQ3B,EAAM2B,MACnB,EAAKH,GAAKxB,EAAMwB,GAChB,EAAKT,MAAQ,CACTD,OAAS,IAEb,EAAKV,WATS,E,sEAwFd,OACI,kBAAC,WAAD,KAEQwB,KAAKZ,mB,GA5FHa,aCiBPC,EAfM,SAAC,GAAD,SAAEC,SACVC,KAAI,SAAAC,GACT,OACI,kBAAC,EAAD,CACIZ,KAAMY,EAAOZ,KACbK,WAAYO,EAAOP,WACnBQ,cAAeD,EAAOC,cACtBC,IAAKF,EAAOT,GACZA,GAAIS,EAAOT,SCoFZY,E,2MA3FXrB,MAAQ,CACJsB,OAAS,GACTC,QAAU,GACVC,OAAQ,G,EAGZtC,kBAAoB,WAEhB,EAAKC,iBAAkB,G,EAG3BC,qBAAuB,WAEnB,EAAKD,iBAAkB,G,EAG3BsC,oBAAsB,SAAAC,GAClB,IAAMJ,EAASI,EAAMC,OAAOC,MAC5BC,QAAQC,IAAIR,GACTA,EAAOpB,OAAS,GAAK,EAAKf,iBACzB,EAAKW,SAAS,CACVwB,SACAC,QAAU,GACVC,OAAQ,GACT,EAAKO,gB,EAIfA,c,sBAAgB,gCAAAzC,EAAA,6DACPK,EADO,sDAC8C,EAAKK,MAAMsB,OADzD,kEAGS/B,MAAMI,GAHf,cAGHH,EAHG,gBAIUA,EAAIwC,OAJd,OAIHA,EAJG,OAMN,EAAK7C,iBACJ,EAAKW,SAAS,CACVyB,QAAUS,EAAKC,QACfT,OAAQ,IATP,kDAcT,EAAK1B,SAAS,CACVyB,QAAU,GACVC,OAAQ,IAhBH,0D,EAqBjBU,aAAe,WAEX,OAAG,EAAKlC,MAAMwB,MAEN,yBAAKrB,UAAU,yDACX,uBAAGA,UAAU,QAAb,oCAMR,EAAKH,MAAMuB,QAAQrB,OACf,kBAAC,EAAD,CAAcc,SAAU,EAAKhB,MAAMuB,UAEvC,yBAAKpB,UAAU,yDACX,uBAAGA,UAAU,QAAb,uB,wEAMR,OACI,kBAAC,WAAD,KACI,0BAAMA,UAAU,4DAA4DM,GAAG,aAC3E,uBAAGN,UAAU,gCACb,wBAAIA,UAAU,qBAAd,wBACA,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,iCAAhB,UAEA,2BAAOgC,KAAK,OAAOC,SAAUvB,KAAKY,oBAAqBtB,UAAU,sCAAsCkC,aAAa,MAAMC,YAAY,gBAIhJzB,KAAKqB,qB,GArFLpB,a,iBCUPyB,E,2MAXXvC,MAAQ,G,wEAEJ,OACI,0BAAMG,UAAU,4DAA4DM,GAAG,aAC3E,yBAAKN,UAAU,2CAA2CC,IAAKoC,MAC/D,wBAAIrC,UAAU,0BAAd,oD,GANUW,a,iBCOX2B,EAPE,kBACb,0BAAMtC,UAAU,4DAA4DM,GAAG,aAC3E,yBAAKN,UAAU,2CAA2CC,IAAKsC,MAC/D,wBAAIvC,UAAU,0BAAd,4CCyBOwC,EAvBC,kBACZ,kBAAC,WAAD,KACI,yBAAKxC,UAAU,0EACX,wBAAIA,UAAU,wCAAd,oBAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBACd,kBAAC,EAAD,OAGJ,kBAAC,IAAD,KACI,kBAAC,EAAD,WCZLC,EAHH,kBAAO,kBAAC,EAAD,OCAnBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SACrC,WACIrB,QAAQC,IAAI,+BRwHtB,kBAAmBqB,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d717956f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1097.0f92dacb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404.93165416.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Fragment, Component} from 'react';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nclass Picture extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.name = props.name;\r\n        this.lastupdate = props.lastupdate;\r\n        this.theme = props.theme;\r\n        this.id = props.id;\r\n        this.state = {\r\n            images : []\r\n        };\r\n        this.getImage();\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        // comprobar que exista el componente.\r\n        this._existComponent = true;\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        // evitar perdidas de memoria, cuando el componente se destruya.\r\n        this._existComponent = false;\r\n    }\r\n\r\n    getImage = async () => {\r\n        const xhr = await fetch('https://picsum.photos/500/200');\r\n        const file = await xhr.blob();\r\n        const url = URL.createObjectURL(file);\r\n\r\n        if(this._existComponent){\r\n            this.setState({\r\n                images : [...this.state.images, url]\r\n            })\r\n        }\r\n    }\r\n\r\n    renderCards = () => {\r\n        if(this.state.images.length > 0){\r\n            return(\r\n                <div className=\"card w-75 my-4 mx-auto shadow-sm\">\r\n                    <img className=\"card-img-top img-fluid h-100\" src={this.state.images[0]} alt={this.name} />\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-lg-6\">\r\n                                <h5 className=\"card-title\">{this.name}</h5>\r\n                                <h6 style={{\r\n                                    fontWeight : \"lighter\"\r\n                                }}>Id: {this.id}</h6>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 text-right\">\r\n                                <Link to={`/picture-page/${2}`} className=\"text-dark\">\r\n                                    <span>ver mas <i className=\"fa fa-eye\"></i></span>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                        <small className=\"card-subtitle mb-2 text-muted\">\r\n                            {this.lastupdate}\r\n                        </small>\r\n\r\n                        <p className=\"card-text\">\r\n                            {this.theme}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"sk-fading-circle\">\r\n                    <div className=\"sk-circle1 sk-circle\"></div>\r\n                    <div className=\"sk-circle2 sk-circle\"></div>\r\n                    <div className=\"sk-circle3 sk-circle\"></div>\r\n                    <div className=\"sk-circle4 sk-circle\"></div>\r\n                    <div className=\"sk-circle5 sk-circle\"></div>\r\n                    <div className=\"sk-circle6 sk-circle\"></div>\r\n                    <div className=\"sk-circle7 sk-circle\"></div>\r\n                    <div className=\"sk-circle8 sk-circle\"></div>\r\n                    <div className=\"sk-circle9 sk-circle\"></div>\r\n                    <div className=\"sk-circle10 sk-circle\"></div>\r\n                    <div className=\"sk-circle11 sk-circle\"></div>\r\n                    <div className=\"sk-circle12 sk-circle\"></div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    this.renderCards()\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Picture;","import React, { Component, Fragment } from 'react';\r\n\r\n// components\r\nimport Picture from './Picture';\r\n\r\nconst PicturesList = ({pictures}) => (\r\n    pictures.map(picure => {\r\n        return (\r\n            <Picture \r\n                name={picure.name} \r\n                lastupdate={picure.lastupdate}\r\n                gallerynumber={picure.gallerynumber}\r\n                key={picure.id}\r\n                id={picure.id}\r\n            >\r\n            </Picture>\r\n        );\r\n    })\r\n);\r\n\r\nexport default PicturesList;","import React, { Component, Fragment } from 'react';\r\n\r\n//components\r\nimport PicturesList from './PicturesList';\r\n\r\nclass Gallery extends Component {\r\n    state = { \r\n        search : '',\r\n        results : [],\r\n        error : false\r\n     }\r\n    \r\n    componentDidMount = () => {\r\n        // comprobar que exista el componente.\r\n        this._existComponent = true;\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        // evitar perdidas de memoria, cuando el componente se destruya.\r\n        this._existComponent = false;\r\n    }\r\n\r\n    handleCaptureSearch = event => {\r\n        const search = event.target.value;\r\n        console.log(search);\r\n        if(search.length > 0 && this._existComponent){\r\n            this.setState({\r\n                search,\r\n                results : [],\r\n                error : false\r\n            }, this.handleResults);\r\n        }\r\n    }\r\n\r\n     handleResults = async () => {\r\n        const url = `https://api.harvardartmuseums.org/gallery?q=${this.state.search}&apikey=11c06430-a2ab-11ea-9ce0-85bc651c2a41`;\r\n        try {\r\n            const xhr = await fetch(url);\r\n            const json = await xhr.json();\r\n\r\n            if(this._existComponent){\r\n                this.setState({\r\n                    results : json.records,\r\n                    error : false\r\n                }); \r\n            }\r\n        \r\n        } catch (error) {\r\n            this.setState({\r\n                results : [],\r\n                error : true\r\n            })\r\n        }\r\n    }\r\n\r\n    showPictures = () => {\r\n        // comprobamos si hay errores\r\n        if(this.state.error){\r\n            return(\r\n                <div className=\"alert alert-danger py-2 mt-3 mx-auto w-75 text-center\">\r\n                    <p className=\"mb-0\">Hubo un problema de conexión</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            this.state.results.length ? \r\n                <PicturesList pictures={this.state.results}/> : \r\n\r\n            <div className=\"alert alert-danger py-2 mt-3 mx-auto w-75 text-center\">\r\n                <p className=\"mb-0\">No hay resultados</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <Fragment>\r\n                <main className='container bg-light p-5 my-5 shadow-sm rounded w-50 border' id=\"container\">\r\n                    <i className=\"icon-find mb-3 fa fa-search\"></i>\r\n                    <h2 className=\"text-center title\">Buscar en galería</h2>\r\n                    <div className=\"container-fluid row mx-auto px-0\">\r\n                        <div className=\"col-lg-12 px-0\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"lead d-block my-3 text-center\">Nombre</span>\r\n                                \r\n                                <input type=\"text\" onChange={this.handleCaptureSearch} className=\"form-control mx-auto w-75 shadow-sm\" defaultValue=\"Art\" placeholder=\"Busca...\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { this.showPictures() }\r\n                </main> \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Gallery;","import React, { Component } from 'react';\r\nimport imgMantenimiento from '../images/1097.jpg';\r\n\r\nclass PicturePage extends Component{\r\n    state = {};\r\n    render(){\r\n        return (\r\n            <main className='container bg-light p-5 my-5 shadow-sm rounded w-50 border' id=\"container\">\r\n                <img className=\"img-fluid w-75 d-block mx-auto shadow-sm\" src={imgMantenimiento}/>\r\n                <h2 className=\"mt-5 text-center title\">Esta sección está en construcción.</h2>\r\n            </main> \r\n        )\r\n    }\r\n}\r\n\r\nexport default PicturePage","import React from 'react';\r\nimport notFound from '../images/404.jpg';\r\n\r\nconst NotFound = () =>  (\r\n    <main className='container bg-light p-5 my-5 shadow-sm rounded w-50 border' id=\"container\">\r\n        <img className=\"img-fluid w-75 d-block mx-auto shadow-sm\" src={notFound}/>\r\n        <h2 className=\"mt-5 text-center title\">Lo que buscas no se encuentra aquí.</h2>\r\n    </main>\r\n)\r\n\r\nexport default NotFound;","import React, {Fragment} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\n// componentes\r\nimport Gallery from \"./Gallery\";\r\nimport PicturePage from './PicturePage';\r\nimport NotFound from './NoFound';\r\n\r\nconst Routers = () => (\r\n    <Fragment>\r\n        <nav className='navbar navbar-fixed navbar-expand-lg bg-primary justify-content-center'>\r\n            <h1 className='navbar-brand text-white m-0 p-0 py-3'>Harvard Gallery</h1>\r\n        </nav>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" >\r\n                    <Gallery />\r\n                </Route>\r\n\r\n                <Route exact path=\"/picture-page/:id\" >\r\n                    <PicturePage />\r\n                </Route>\r\n\r\n                <Route>\r\n                    <NotFound />\r\n                </Route>     \r\n            </Switch>\r\n        </Router>\r\n    </Fragment>\r\n)\r\n\r\nexport default Routers;","import React from 'react';\r\n\r\n\r\n// css\r\nimport '../css/style.css'\r\n\r\n// componentes\r\nimport Routers from './Routers';\r\n\r\nconst App = () => (<Routers />);\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// components\nimport App from './harvard-galery/componentes/App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'),\n            ()=>{\n                console.log('Componentes renderizados');\n            });\n\nserviceWorker.unregister();\n"],"sourceRoot":""}